server {
    server_name cloud.web-for-mqtt.domain.com;

	location /ws {
	proxy_pass http://mqtt:9001;
	proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
}


    location / {
	if ($request_method = 'OPTIONS') {
        	#add_header 'Access-Control-Allow-Origin' "*";
        	add_header 'Access-Control-Allow-Credentials' 'true' always;
        	add_header 'Access-Control-Allow-Headers' "authorization, Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
			add_header 'Access-Control-Request-Headers' 'Accept, authorization,  Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always ;
        	add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        	add_header 'Access-Control-Max-Age' 1728000;
        	add_header 'Content-Type' 'text/plain; charset=utf-8';
        	add_header 'Content-Length' 0;
        	return 200;
     }
    proxy_pass http://cloud-api:8081;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
	proxy_set_header X-Forwarded-For $proxy_protocol_addr;
	#add_header Access-Control-Allow-Origin "*";
	add_header 'Access-Control-Allow-Credentials' 'true' always;
	add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
	add_header 'Access-Control-Allow-Headers'   'Accept, authorization,  Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
	add_header 'Access-Control-Request-Headers' 'Accept, authorization, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always ;
    }



    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/bff-poc.ems-web.inno2grid.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/bff-poc.ems-web.inno2grid.net/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host =cloud.web-for-mqtt.domain.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name cloud.web-for-mqtt.domain.com;
    listen 80;
    return 404; # managed by Certbot


}
